language: php
sudo: false

env:
  global:
    secure: rxc2jWPEEbwd6JQJdjzoMH8hDR0/Bks0KGQYQyS/VsJsSzX/oW3vQhdvdRAqhBitQdTFOFXLwr3JFPxXBhOLvElmEV4fZcz0hckaVsW2zoS2rI/PQtiDDCJkYEH9CyUztU0tYc3s5o0giaTiAUM7oaww8IlOwVqBA+HftHEWLiY=

mysql:
  database: entity_xliff_test
  username: root
  encoding: utf8

addons:
  apt:
    packages:
      - libxml2-dev
      - php5-cgi
      - php5-mysql
      - php5-cli
      - php5-curl
      - php5-gd
      - php5-common

env:
  global:
    - DB_USER=root
    - DB_PW=entity_xliff_test_password
    - DB_NAME=entity_xliff_test

matrix:
  include:
    - php: "5.3"
      env: BDD=true
    - php: "5.4"
      env: BDD=true
    - php: "5.5"
      env: BDD=true
    - php: "5.6"
      env: BDD=true
    - php: "7.0"
      env: BDD=false
    - php: "hhvm"
      env: BDD=false

before_install:
  # Update composer
  - composer self-update

install:
  # Install requisite PHP libraries.
  - composer install --prefer-dist

  # Install drush.
  - if [ $BDD = 'true' ] ; then composer global require drush/drush:6.x-dev ; fi
  - if [ $BDD = 'true' ] ; then export PATH="$HOME/.composer/vendor/bin:$TRAVIS_BUILD_DIR/vendor/bin:$PATH" ; fi

before_script:
  # Install a copy of Drupal for behavioral tests.
  - if [ $BDD = 'true' ] ; then echo "USE mysql;\nUPDATE user SET password=PASSWORD('$DB_PW') WHERE user='$DB_USER';\nFLUSH PRIVILEGES;\n" | mysql -u root ; fi
  - if [ $BDD = 'true' ] ; then ./test/scripts/install_drupal.sh ; fi

  # Start a server where Drupal can be accessed.
  - if [ $BDD = 'true' ] ; then pushd build/drupal ; fi
  - if [ $BDD = 'true' ] ; then (drush runserver 127.0.0.1:8181 --browser=0 > /dev/null 2>&1 &) ; fi
  - if [ $BDD = 'true' ] ; then (while echo | telnet localhost 8181 2>&1 | grep -qe 'Connection refused'; do echo "Connection refused on port 8181. Waiting 5 seconds..."; sleep 5; done) ; fi
  - if [ $BDD = 'true' ] ; then popd ; fi

script:
  - phpunit --coverage-text --coverage-clover build/logs/clover.xml
  - if [ $BDD = 'true' ] ; then behat --verbose ; fi

after_script:
  - ./vendor/bin/test-reporter --stdout > build/logs/coverage.json
  - "curl -X POST -d @build/logs/coverage.json -H 'Content-Type: application/json' -H 'User-Agent: Code Climate (PHP Test Reporter v1.0.1-dev)' https://codeclimate.com/test_reports"
